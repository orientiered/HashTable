<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="646" onload="init(evt)" viewBox="0 0 1200 646" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="646.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="629" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="629" > </text>
<g id="frames">
<g >
<title>trigger_load_balance (5,482,271 samples, 0.01%)</title><rect x="186.8" y="325" width="0.1" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="189.80" y="335.5" ></text>
</g>
<g >
<title>pud_val (4,477,069 samples, 0.01%)</title><rect x="322.5" y="405" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="325.46" y="415.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (8,598,564 samples, 0.02%)</title><rect x="285.6" y="133" width="0.2" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="288.62" y="143.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (180,008,763 samples, 0.40%)</title><rect x="13.4" y="229" width="4.7" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="16.44" y="239.5" ></text>
</g>
<g >
<title>__strcmp_evex (20,159,231,105 samples, 44.54%)</title><rect x="332.9" y="469" width="525.6" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="335.92" y="479.5" >__strcmp_evex</text>
</g>
<g >
<title>folio_add_new_anon_rmap (31,049,292 samples, 0.07%)</title><rect x="293.5" y="149" width="0.8" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="296.54" y="159.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (43,698,348 samples, 0.10%)</title><rect x="15.4" y="165" width="1.2" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="18.44" y="175.5" ></text>
</g>
<g >
<title>count_memcg_events.constprop.0 (12,958,634 samples, 0.03%)</title><rect x="295.0" y="197" width="0.4" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="298.03" y="207.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (13,853,060 samples, 0.03%)</title><rect x="293.0" y="69" width="0.3" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="295.95" y="79.5" ></text>
</g>
<g >
<title>handle_pte_fault (660,430,302 samples, 1.46%)</title><rect x="304.5" y="389" width="17.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="307.52" y="399.5" ></text>
</g>
<g >
<title>sched_use_asym_prio (13,961,296 samples, 0.03%)</title><rect x="856.9" y="277" width="0.3" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="859.88" y="287.5" ></text>
</g>
<g >
<title>__folio_throttle_swaprate (12,275,764 samples, 0.03%)</title><rect x="284.6" y="149" width="0.3" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="287.56" y="159.5" ></text>
</g>
<g >
<title>srso_alias_safe_ret (4,973,335 samples, 0.01%)</title><rect x="321.6" y="373" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="324.59" y="383.5" ></text>
</g>
<g >
<title>unmap_vmas (306,033,384 samples, 0.68%)</title><rect x="10.3" y="341" width="8.0" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="13.31" y="351.5" ></text>
</g>
<g >
<title>rmqueue (27,552,043 samples, 0.06%)</title><rect x="290.8" y="69" width="0.7" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="293.83" y="79.5" ></text>
</g>
<g >
<title>uncharge_folio (13,973,719 samples, 0.03%)</title><rect x="14.2" y="181" width="0.4" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="17.19" y="191.5" ></text>
</g>
<g >
<title>lru_gen_add_folio (35,179,051 samples, 0.08%)</title><rect x="318.2" y="293" width="0.9" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="321.18" y="303.5" ></text>
</g>
<g >
<title>error_return (3,951,437 samples, 0.01%)</title><rect x="297.2" y="277" width="0.1" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="300.17" y="287.5" ></text>
</g>
<g >
<title>do_anonymous_page (615,089,813 samples, 1.36%)</title><rect x="305.0" y="373" width="16.0" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="308.00" y="383.5" ></text>
</g>
<g >
<title>folio_remove_rmap_ptes (73,463,273 samples, 0.16%)</title><rect x="11.5" y="261" width="1.9" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="14.53" y="271.5" ></text>
</g>
<g >
<title>handle_mm_fault (519,778,612 samples, 1.15%)</title><rect x="282.1" y="213" width="13.5" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="285.10" y="223.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (179,087,474 samples, 0.40%)</title><rect x="306.8" y="357" width="4.7" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="309.83" y="367.5" ></text>
</g>
<g >
<title>__free_one_page (35,317,285 samples, 0.08%)</title><rect x="15.6" y="149" width="0.9" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="18.62" y="159.5" ></text>
</g>
<g >
<title>unmap_region (313,932,627 samples, 0.69%)</title><rect x="10.1" y="357" width="8.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="13.10" y="367.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (8,832,483 samples, 0.02%)</title><rect x="918.3" y="373" width="0.2" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="921.31" y="383.5" ></text>
</g>
<g >
<title>tlb_batch_pages_flush (185,506,692 samples, 0.41%)</title><rect x="13.4" y="245" width="4.9" height="15.0" fill="rgb(234,133,32)" rx="2" ry="2" />
<text  x="16.44" y="255.5" ></text>
</g>
<g >
<title>scheduler_tick (45,221,362 samples, 0.10%)</title><rect x="1185.9" y="325" width="1.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1188.86" y="335.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (10,288,455 samples, 0.02%)</title><rect x="918.3" y="405" width="0.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="921.29" y="415.5" ></text>
</g>
<g >
<title>hrtimer_update_next_event (3,939,210 samples, 0.01%)</title><rect x="857.5" y="389" width="0.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="860.55" y="399.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (8,245,932 samples, 0.02%)</title><rect x="1186.0" y="293" width="0.2" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="1189.00" y="303.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,024,063,128 samples, 2.26%)</title><rect x="271.9" y="437" width="26.7" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="274.91" y="447.5" >e..</text>
</g>
<g >
<title>sync_regs (7,390,666 samples, 0.02%)</title><rect x="858.3" y="453" width="0.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="861.27" y="463.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (67,124,367 samples, 0.15%)</title><rect x="1185.3" y="389" width="1.8" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1188.31" y="399.5" ></text>
</g>
<g >
<title>__count_memcg_events (8,646,652 samples, 0.02%)</title><rect x="286.8" y="117" width="0.3" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="289.83" y="127.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (4,424,557 samples, 0.01%)</title><rect x="858.0" y="405" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="860.95" y="415.5" ></text>
</g>
<g >
<title>tick_sched_handle (7,822,045 samples, 0.02%)</title><rect x="324.7" y="373" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="327.67" y="383.5" ></text>
</g>
<g >
<title>__folio_throttle_swaprate (21,852,092 samples, 0.05%)</title><rect x="306.3" y="357" width="0.5" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="309.26" y="367.5" ></text>
</g>
<g >
<title>update_wall_time (7,243,854 samples, 0.02%)</title><rect x="1185.5" y="325" width="0.2" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1188.48" y="335.5" ></text>
</g>
<g >
<title>irqentry_enter (4,351,810 samples, 0.01%)</title><rect x="296.5" y="245" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="299.48" y="255.5" ></text>
</g>
<g >
<title>isspace@plt (616,685,155 samples, 1.36%)</title><rect x="187.2" y="485" width="16.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="190.16" y="495.5" ></text>
</g>
<g >
<title>lock_mm_and_find_vma (30,121,611 samples, 0.07%)</title><rect x="295.6" y="213" width="0.8" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="298.65" y="223.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (7,040,168 samples, 0.02%)</title><rect x="294.0" y="117" width="0.2" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="296.98" y="127.5" ></text>
</g>
<g >
<title>srso_alias_safe_ret (7,209,548 samples, 0.02%)</title><rect x="320.8" y="357" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="323.76" y="367.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (21,092,314 samples, 0.05%)</title><rect x="186.4" y="405" width="0.5" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="189.39" y="415.5" ></text>
</g>
<g >
<title>clear_page_erms (36,373,480 samples, 0.08%)</title><rect x="289.7" y="69" width="1.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="292.71" y="79.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (25,208,683 samples, 0.06%)</title><rect x="186.4" y="421" width="0.6" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="189.38" y="431.5" ></text>
</g>
<g >
<title>vma_alloc_folio (136,737,873 samples, 0.30%)</title><rect x="288.3" y="133" width="3.6" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="291.33" y="143.5" ></text>
</g>
<g >
<title>__pte_offset_map_lock (14,051,951 samples, 0.03%)</title><rect x="287.6" y="149" width="0.3" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="290.57" y="159.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (14,204,888 samples, 0.03%)</title><rect x="323.9" y="421" width="0.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="326.94" y="431.5" ></text>
</g>
<g >
<title>tick_sched_do_timer (15,774,610 samples, 0.03%)</title><rect x="854.4" y="357" width="0.4" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="857.41" y="367.5" ></text>
</g>
<g >
<title>free_swap_cache (5,497,929 samples, 0.01%)</title><rect x="18.1" y="229" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="21.13" y="239.5" ></text>
</g>
<g >
<title>free_unref_page_commit (51,411,300 samples, 0.11%)</title><rect x="15.2" y="181" width="1.4" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="18.24" y="191.5" ></text>
</g>
<g >
<title>folio_batch_move_lru (71,751,496 samples, 0.16%)</title><rect x="317.3" y="325" width="1.9" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="320.33" y="335.5" ></text>
</g>
<g >
<title>__alloc_pages (117,526,925 samples, 0.26%)</title><rect x="288.5" y="101" width="3.1" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="291.53" y="111.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (61,606,415 samples, 0.14%)</title><rect x="1185.4" y="373" width="1.6" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1188.43" y="383.5" ></text>
</g>
<g >
<title>crc32 (2,303,290,893 samples, 5.09%)</title><rect x="858.6" y="469" width="60.0" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="861.56" y="479.5" >crc32</text>
</g>
<g >
<title>irqentry_exit (15,707,368 samples, 0.03%)</title><rect x="323.9" y="437" width="0.4" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="326.90" y="447.5" ></text>
</g>
<g >
<title>scheduler_tick (7,390,253 samples, 0.02%)</title><rect x="918.3" y="325" width="0.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="921.35" y="335.5" ></text>
</g>
<g >
<title>__isoc23_sscanf (61,216,576 samples, 0.14%)</title><rect x="298.7" y="469" width="1.6" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="301.66" y="479.5" ></text>
</g>
<g >
<title>crc32 (21,347,853 samples, 0.05%)</title><rect x="22.1" y="485" width="0.5" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="25.06" y="495.5" ></text>
</g>
<g >
<title>__libc_calloc (6,614,750 samples, 0.01%)</title><rect x="24.3" y="453" width="0.1" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="27.25" y="463.5" ></text>
</g>
<g >
<title>perf_ibs_start (4,107,936 samples, 0.01%)</title><rect x="1186.1" y="277" width="0.1" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1189.05" y="287.5" ></text>
</g>
<g >
<title>timekeeping_advance (6,351,959 samples, 0.01%)</title><rect x="1185.5" y="309" width="0.2" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="1188.51" y="319.5" ></text>
</g>
<g >
<title>post_alloc_hook (8,634,141 samples, 0.02%)</title><rect x="315.3" y="277" width="0.2" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="318.28" y="287.5" ></text>
</g>
<g >
<title>task_tick_fair (12,248,723 samples, 0.03%)</title><rect x="1186.2" y="309" width="0.4" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1189.24" y="319.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (132,959,874 samples, 0.29%)</title><rect x="854.0" y="389" width="3.5" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="857.02" y="399.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (14,093,299 samples, 0.03%)</title><rect x="324.5" y="469" width="0.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="327.54" y="479.5" ></text>
</g>
<g >
<title>handle_mm_fault (759,875,030 samples, 1.68%)</title><rect x="302.8" y="421" width="19.8" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="305.82" y="431.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (7,019,539 samples, 0.02%)</title><rect x="10.1" y="309" width="0.2" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="13.12" y="319.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (9,890,876 samples, 0.02%)</title><rect x="918.3" y="389" width="0.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="921.30" y="399.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (18,206,811 samples, 0.04%)</title><rect x="296.7" y="277" width="0.5" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="299.69" y="287.5" ></text>
</g>
<g >
<title>release_pages (7,019,539 samples, 0.02%)</title><rect x="10.1" y="293" width="0.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="13.12" y="303.5" ></text>
</g>
<g >
<title>sched_use_asym_prio (6,518,095 samples, 0.01%)</title><rect x="1186.8" y="277" width="0.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1189.78" y="287.5" ></text>
</g>
<g >
<title>mem_cgroup_commit_charge (28,361,511 samples, 0.06%)</title><rect x="286.4" y="133" width="0.7" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="289.40" y="143.5" ></text>
</g>
<g >
<title>tick_sched_handle (52,248,844 samples, 0.12%)</title><rect x="1185.7" y="357" width="1.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1188.68" y="367.5" ></text>
</g>
<g >
<title>_find_next_bit (5,942,598 samples, 0.01%)</title><rect x="856.6" y="277" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="859.62" y="287.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (8,114,245 samples, 0.02%)</title><rect x="324.7" y="389" width="0.2" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="327.66" y="399.5" ></text>
</g>
<g >
<title>main (45,261,640,819 samples, 100.00%)</title><rect x="10.0" y="517" width="1180.0" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="13.03" y="527.5" >main</text>
</g>
<g >
<title>nohz_balancer_kick (13,839,164 samples, 0.03%)</title><rect x="1186.6" y="293" width="0.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1189.59" y="303.5" ></text>
</g>
<g >
<title>_int_malloc (6,149,391 samples, 0.01%)</title><rect x="24.3" y="437" width="0.1" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="27.27" y="447.5" ></text>
</g>
<g >
<title>task_tick_fair (23,243,448 samples, 0.05%)</title><rect x="855.8" y="309" width="0.6" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="858.81" y="319.5" ></text>
</g>
<g >
<title>perf_event_update_userpage (5,904,428 samples, 0.01%)</title><rect x="855.5" y="261" width="0.2" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="858.51" y="271.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (5,905,769 samples, 0.01%)</title><rect x="301.8" y="437" width="0.2" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="304.83" y="447.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (1,024,063,128 samples, 2.26%)</title><rect x="271.9" y="341" width="26.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="274.91" y="351.5" >e..</text>
</g>
<g >
<title>__mod_lruvec_state (12,983,414 samples, 0.03%)</title><rect x="318.6" y="277" width="0.4" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="321.63" y="287.5" ></text>
</g>
<g >
<title>update_wall_time (13,726,496 samples, 0.03%)</title><rect x="854.5" y="325" width="0.3" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="857.46" y="335.5" ></text>
</g>
<g >
<title>__x64_sys_read (1,024,063,128 samples, 2.26%)</title><rect x="271.9" y="389" width="26.7" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="274.91" y="399.5" >_..</text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (10,473,749 samples, 0.02%)</title><rect x="918.3" y="421" width="0.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="921.29" y="431.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (6,700,623 samples, 0.01%)</title><rect x="13.3" y="245" width="0.1" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="16.25" y="255.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (12,137,360 samples, 0.03%)</title><rect x="17.5" y="181" width="0.3" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="20.46" y="191.5" ></text>
</g>
<g >
<title>perf_event_task_tick (10,015,002 samples, 0.02%)</title><rect x="1186.0" y="309" width="0.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1188.97" y="319.5" ></text>
</g>
<g >
<title>mem_cgroup_commit_charge (48,271,347 samples, 0.11%)</title><rect x="309.4" y="341" width="1.3" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="312.40" y="351.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (313,932,627 samples, 0.69%)</title><rect x="10.1" y="469" width="8.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="13.10" y="479.5" ></text>
</g>
<g >
<title>get_page_from_freelist (82,240,523 samples, 0.18%)</title><rect x="289.4" y="85" width="2.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="292.42" y="95.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (119,668,618 samples, 0.26%)</title><rect x="854.3" y="373" width="3.2" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="857.35" y="383.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (4,575,736 samples, 0.01%)</title><rect x="17.5" y="165" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="20.55" y="175.5" ></text>
</g>
<g >
<title>ksys_read (1,024,063,128 samples, 2.26%)</title><rect x="271.9" y="373" width="26.7" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="274.91" y="383.5" >k..</text>
</g>
<g >
<title>nohz_balancer_kick (29,196,745 samples, 0.06%)</title><rect x="856.5" y="293" width="0.7" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="859.49" y="303.5" ></text>
</g>
<g >
<title>testPerformance (45,261,232,566 samples, 99.99%)</title><rect x="10.0" y="501" width="1180.0" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="13.04" y="511.5" >testPerformance</text>
</g>
<g >
<title>get_mem_cgroup_from_mm (25,681,131 samples, 0.06%)</title><rect x="308.7" y="341" width="0.7" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="311.73" y="351.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (20,743,132 samples, 0.05%)</title><rect x="285.9" y="133" width="0.5" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="288.86" y="143.5" ></text>
</g>
<g >
<title>do_user_addr_fault (574,895,939 samples, 1.27%)</title><rect x="281.5" y="229" width="15.0" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="284.47" y="239.5" ></text>
</g>
<g >
<title>tick_sched_handle (7,716,613 samples, 0.02%)</title><rect x="918.3" y="357" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="921.34" y="367.5" ></text>
</g>
<g >
<title>__rmqueue_pcplist (22,896,663 samples, 0.05%)</title><rect x="315.7" y="261" width="0.6" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="318.73" y="271.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (4,095,158 samples, 0.01%)</title><rect x="304.4" y="389" width="0.1" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="307.37" y="399.5" ></text>
</g>
<g >
<title>x64_sys_call (313,932,627 samples, 0.69%)</title><rect x="10.1" y="437" width="8.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="13.10" y="447.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (170,492,523 samples, 0.38%)</title><rect x="853.7" y="437" width="4.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="856.71" y="447.5" ></text>
</g>
<g >
<title>native_read_msr (3,892,837 samples, 0.01%)</title><rect x="855.7" y="261" width="0.1" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="858.70" y="271.5" ></text>
</g>
<g >
<title>__count_memcg_events (6,007,784 samples, 0.01%)</title><rect x="322.1" y="389" width="0.2" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="325.11" y="399.5" ></text>
</g>
<g >
<title>update_load_avg (7,469,101 samples, 0.02%)</title><rect x="1186.4" y="293" width="0.2" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1189.36" y="303.5" ></text>
</g>
<g >
<title>irq_exit_rcu (3,846,190 samples, 0.01%)</title><rect x="1187.2" y="421" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1190.22" y="431.5" ></text>
</g>
<g >
<title>idle_cpu (5,059,909 samples, 0.01%)</title><rect x="857.1" y="261" width="0.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="860.11" y="271.5" ></text>
</g>
<g >
<title>post_alloc_hook (6,223,500 samples, 0.01%)</title><rect x="290.7" y="69" width="0.1" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="293.67" y="79.5" ></text>
</g>
<g >
<title>_IO_fread (1,024,365,166 samples, 2.26%)</title><rect x="271.9" y="469" width="26.7" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="274.90" y="479.5" >_..</text>
</g>
<g >
<title>trigger_load_balance (33,572,324 samples, 0.07%)</title><rect x="856.4" y="309" width="0.9" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="859.42" y="319.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (11,732,020 samples, 0.03%)</title><rect x="918.3" y="453" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="921.28" y="463.5" ></text>
</g>
<g >
<title>alloc_anon_folio (170,268,129 samples, 0.38%)</title><rect x="312.5" y="357" width="4.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="315.48" y="367.5" ></text>
</g>
<g >
<title>folio_add_lru (61,864,192 samples, 0.14%)</title><rect x="291.9" y="133" width="1.6" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="294.93" y="143.5" ></text>
</g>
<g >
<title>count_memcg_events.constprop.0 (4,112,809 samples, 0.01%)</title><rect x="302.7" y="421" width="0.1" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="305.67" y="431.5" ></text>
</g>
<g >
<title>tlb_batch_pages_flush (7,303,512 samples, 0.02%)</title><rect x="10.1" y="325" width="0.2" height="15.0" fill="rgb(234,133,32)" rx="2" ry="2" />
<text  x="13.12" y="335.5" ></text>
</g>
<g >
<title>lru_add_fn (5,097,655 samples, 0.01%)</title><rect x="319.2" y="325" width="0.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="322.20" y="335.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64 (15,005,656 samples, 0.03%)</title><rect x="854.4" y="341" width="0.4" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="857.42" y="351.5" ></text>
</g>
<g >
<title>pte_offset_map_nolock (14,473,413 samples, 0.03%)</title><rect x="321.2" y="373" width="0.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="324.20" y="383.5" ></text>
</g>
<g >
<title>folio_add_lru_vma (61,864,192 samples, 0.14%)</title><rect x="291.9" y="149" width="1.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="294.93" y="159.5" ></text>
</g>
<g >
<title>__rcu_read_lock (4,019,206 samples, 0.01%)</title><rect x="312.0" y="341" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="315.03" y="351.5" ></text>
</g>
<g >
<title>filemap_get_read_batch (47,142,326 samples, 0.10%)</title><rect x="297.3" y="277" width="1.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="300.31" y="287.5" ></text>
</g>
<g >
<title>__handle_mm_fault (483,892,663 samples, 1.07%)</title><rect x="282.4" y="197" width="12.6" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="285.41" y="207.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (9,629,340 samples, 0.02%)</title><rect x="324.6" y="437" width="0.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="327.63" y="447.5" ></text>
</g>
<g >
<title>blk_cgroup_congested (6,800,995 samples, 0.02%)</title><rect x="306.5" y="341" width="0.2" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="309.53" y="351.5" ></text>
</g>
<g >
<title>find_vma (24,318,462 samples, 0.05%)</title><rect x="295.8" y="197" width="0.6" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="298.78" y="207.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (13,677,925 samples, 0.03%)</title><rect x="308.3" y="341" width="0.3" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="311.29" y="351.5" ></text>
</g>
<g >
<title>timekeeping_advance (12,552,359 samples, 0.03%)</title><rect x="854.5" y="309" width="0.3" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="857.48" y="319.5" ></text>
</g>
<g >
<title>hashTableAccess (70,041,965 samples, 0.15%)</title><rect x="22.6" y="485" width="1.8" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="25.62" y="495.5" ></text>
</g>
<g >
<title>free_unref_page_list (76,773,283 samples, 0.17%)</title><rect x="14.8" y="197" width="2.0" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="17.75" y="207.5" ></text>
</g>
<g >
<title>folio_add_new_anon_rmap (42,954,875 samples, 0.09%)</title><rect x="319.3" y="357" width="1.2" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="322.34" y="367.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (668,322,848 samples, 1.48%)</title><rect x="279.2" y="261" width="17.4" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="282.19" y="271.5" ></text>
</g>
<g >
<title>handle_pte_fault (451,707,662 samples, 1.00%)</title><rect x="283.2" y="181" width="11.8" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="286.20" y="191.5" ></text>
</g>
<g >
<title>__rmqueue_pcplist (22,841,903 samples, 0.05%)</title><rect x="291.0" y="53" width="0.5" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="293.95" y="63.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (5,720,457 samples, 0.01%)</title><rect x="318.8" y="261" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="321.81" y="271.5" ></text>
</g>
<g >
<title>lru_gen_add_folio (28,272,336 samples, 0.06%)</title><rect x="292.6" y="85" width="0.7" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="295.61" y="95.5" ></text>
</g>
<g >
<title>x64_sys_call (1,024,063,128 samples, 2.26%)</title><rect x="271.9" y="405" width="26.7" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="274.91" y="415.5" >x..</text>
</g>
<g >
<title>exc_page_fault (622,279,609 samples, 1.37%)</title><rect x="280.3" y="245" width="16.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="283.25" y="255.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (177,094,095 samples, 0.39%)</title><rect x="853.5" y="453" width="4.7" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="856.54" y="463.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (9,629,340 samples, 0.02%)</title><rect x="324.6" y="421" width="0.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="327.63" y="431.5" ></text>
</g>
<g >
<title>__lruvec_stat_mod_folio (28,536,183 samples, 0.06%)</title><rect x="319.5" y="341" width="0.8" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="322.54" y="351.5" ></text>
</g>
<g >
<title>update_load_avg (10,293,784 samples, 0.02%)</title><rect x="856.1" y="293" width="0.3" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="859.13" y="303.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (185,506,692 samples, 0.41%)</title><rect x="13.4" y="261" width="4.9" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="16.44" y="271.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (4,485,324 samples, 0.01%)</title><rect x="320.3" y="341" width="0.1" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="323.28" y="351.5" ></text>
</g>
<g >
<title>rmqueue_bulk (14,404,330 samples, 0.03%)</title><rect x="316.0" y="245" width="0.3" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="318.95" y="255.5" ></text>
</g>
<g >
<title>vfs_read (1,024,063,128 samples, 2.26%)</title><rect x="271.9" y="357" width="26.7" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="274.91" y="367.5" >v..</text>
</g>
<g >
<title>__handle_mm_fault (705,582,194 samples, 1.56%)</title><rect x="303.4" y="405" width="18.4" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="306.42" y="415.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (16,549,296 samples, 0.04%)</title><rect x="855.4" y="293" width="0.4" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="858.37" y="303.5" ></text>
</g>
<g >
<title>lru_add_fn (41,477,139 samples, 0.09%)</title><rect x="292.3" y="101" width="1.0" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="295.26" y="111.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (5,237,051 samples, 0.01%)</title><rect x="320.5" y="357" width="0.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="323.53" y="367.5" ></text>
</g>
<g >
<title>alloc_pages_mpol (131,496,775 samples, 0.29%)</title><rect x="288.4" y="117" width="3.4" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="291.39" y="127.5" ></text>
</g>
<g >
<title>mas_walk (21,549,866 samples, 0.05%)</title><rect x="323.2" y="405" width="0.6" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="326.23" y="415.5" ></text>
</g>
<g >
<title>lru_gen_del_folio.constprop.0 (49,160,318 samples, 0.11%)</title><rect x="16.8" y="197" width="1.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="19.76" y="207.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (102,359,099 samples, 0.23%)</title><rect x="284.9" y="149" width="2.7" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="287.88" y="159.5" ></text>
</g>
<g >
<title>zap_pte_range (301,056,953 samples, 0.67%)</title><rect x="10.4" y="277" width="7.9" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="13.44" y="287.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,024,063,128 samples, 2.26%)</title><rect x="271.9" y="421" width="26.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="274.91" y="431.5" >d..</text>
</g>
<g >
<title>hashTableDtor (9,749,981 samples, 0.02%)</title><rect x="24.5" y="485" width="0.3" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="27.51" y="495.5" ></text>
</g>
<g >
<title>alloc_pages_mpol (147,064,602 samples, 0.32%)</title><rect x="312.9" y="325" width="3.9" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="315.94" y="335.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (27,789,119 samples, 0.06%)</title><rect x="186.4" y="453" width="0.7" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="189.36" y="463.5" ></text>
</g>
<g >
<title>_raw_spin_lock (7,380,763 samples, 0.02%)</title><rect x="288.0" y="149" width="0.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="290.98" y="159.5" ></text>
</g>
<g >
<title>folio_batch_move_lru (49,879,796 samples, 0.11%)</title><rect x="292.1" y="117" width="1.3" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="295.14" y="127.5" ></text>
</g>
<g >
<title>update_process_times (17,865,908 samples, 0.04%)</title><rect x="186.5" y="357" width="0.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="189.47" y="367.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (154,807,564 samples, 0.34%)</title><rect x="853.9" y="405" width="4.0" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="856.89" y="415.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (11,570,150 samples, 0.03%)</title><rect x="918.3" y="437" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="921.28" y="447.5" ></text>
</g>
<g >
<title>unmap_single_vma (306,033,384 samples, 0.68%)</title><rect x="10.3" y="325" width="8.0" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="13.31" y="335.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (28,070,398 samples, 0.06%)</title><rect x="186.4" y="469" width="0.7" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="189.35" y="479.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (25,830,494 samples, 0.06%)</title><rect x="186.4" y="437" width="0.6" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="189.37" y="447.5" ></text>
</g>
<g >
<title>__pte_offset_map (4,068,621 samples, 0.01%)</title><rect x="321.4" y="357" width="0.1" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="324.42" y="367.5" ></text>
</g>
<g >
<title>__mod_zone_page_state (5,244,027 samples, 0.01%)</title><rect x="17.9" y="181" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="20.86" y="191.5" ></text>
</g>
<g >
<title>filemap_get_pages (47,426,655 samples, 0.10%)</title><rect x="297.3" y="293" width="1.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="300.30" y="303.5" ></text>
</g>
<g >
<title>release_pages (176,071,262 samples, 0.39%)</title><rect x="13.5" y="213" width="4.6" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="16.54" y="223.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (16,748,996 samples, 0.04%)</title><rect x="12.7" y="229" width="0.5" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="15.73" y="239.5" ></text>
</g>
<g >
<title>unmap_page_range (306,033,384 samples, 0.68%)</title><rect x="10.3" y="309" width="8.0" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="13.31" y="319.5" ></text>
</g>
<g >
<title>tick_sched_handle (17,865,908 samples, 0.04%)</title><rect x="186.5" y="373" width="0.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="189.47" y="383.5" ></text>
</g>
<g >
<title>task_tick_fair (6,756,927 samples, 0.01%)</title><rect x="186.6" y="325" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="189.62" y="335.5" ></text>
</g>
<g >
<title>try_charge_memcg (15,234,372 samples, 0.03%)</title><rect x="287.2" y="133" width="0.4" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="290.16" y="143.5" ></text>
</g>
<g >
<title>do_user_addr_fault (40,770,517 samples, 0.09%)</title><rect x="279.2" y="245" width="1.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="282.19" y="255.5" ></text>
</g>
<g >
<title>update_process_times (7,716,613 samples, 0.02%)</title><rect x="918.3" y="341" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="921.34" y="351.5" ></text>
</g>
<g >
<title>lru_add_fn (56,958,428 samples, 0.13%)</title><rect x="317.6" y="309" width="1.5" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="320.61" y="319.5" ></text>
</g>
<g >
<title>consume_stock (6,586,359 samples, 0.01%)</title><rect x="287.4" y="117" width="0.1" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="290.36" y="127.5" ></text>
</g>
<g >
<title>allocateNode (6,614,750 samples, 0.01%)</title><rect x="24.3" y="469" width="0.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="27.25" y="479.5" ></text>
</g>
<g >
<title>tick_program_event (6,186,629 samples, 0.01%)</title><rect x="857.8" y="389" width="0.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="860.76" y="399.5" ></text>
</g>
<g >
<title>__mem_cgroup_uncharge_list (25,728,924 samples, 0.06%)</title><rect x="13.9" y="197" width="0.7" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="16.88" y="207.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (10,781,521 samples, 0.02%)</title><rect x="324.6" y="453" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="327.63" y="463.5" ></text>
</g>
<g >
<title>filemap_read (1,016,577,008 samples, 2.25%)</title><rect x="272.1" y="309" width="26.5" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="275.08" y="319.5" >f..</text>
</g>
<g >
<title>clear_page_erms (39,881,331 samples, 0.09%)</title><rect x="314.2" y="277" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="317.22" y="287.5" ></text>
</g>
<g >
<title>do_vmi_align_munmap (313,932,627 samples, 0.69%)</title><rect x="10.1" y="373" width="8.2" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="13.10" y="383.5" ></text>
</g>
<g >
<title>readFileSplit (4,701,467,081 samples, 10.39%)</title><rect x="203.2" y="485" width="122.6" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="206.24" y="495.5" >readFileSplit</text>
</g>
<g >
<title>alloc_anon_folio (142,342,110 samples, 0.31%)</title><rect x="288.2" y="149" width="3.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="291.18" y="159.5" ></text>
</g>
<g >
<title>kthread_blkcg (4,681,656 samples, 0.01%)</title><rect x="306.7" y="341" width="0.1" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="309.71" y="351.5" ></text>
</g>
<g >
<title>__pte_offset_map_lock (22,726,536 samples, 0.05%)</title><rect x="311.6" y="357" width="0.5" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="314.55" y="367.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (7,303,512 samples, 0.02%)</title><rect x="10.1" y="341" width="0.2" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="13.12" y="351.5" ></text>
</g>
<g >
<title>__count_memcg_events (8,330,020 samples, 0.02%)</title><rect x="295.1" y="181" width="0.3" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="298.15" y="191.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (20,777,546 samples, 0.05%)</title><rect x="186.4" y="389" width="0.5" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="189.40" y="399.5" ></text>
</g>
<g >
<title>vma_alloc_folio (160,421,620 samples, 0.35%)</title><rect x="312.7" y="341" width="4.2" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="315.74" y="351.5" ></text>
</g>
<g >
<title>tick_sched_handle (101,350,648 samples, 0.22%)</title><rect x="854.8" y="357" width="2.7" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="857.83" y="367.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (306,033,384 samples, 0.68%)</title><rect x="10.3" y="293" width="8.0" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="13.31" y="303.5" ></text>
</g>
<g >
<title>__strlen_evex (61,216,576 samples, 0.14%)</title><rect x="298.7" y="453" width="1.6" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="301.66" y="463.5" ></text>
</g>
<g >
<title>get_page_from_freelist (98,441,645 samples, 0.22%)</title><rect x="313.8" y="293" width="2.6" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="316.81" y="303.5" ></text>
</g>
<g >
<title>__vm_munmap (313,932,627 samples, 0.69%)</title><rect x="10.1" y="405" width="8.2" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="13.10" y="415.5" ></text>
</g>
<g >
<title>__libc_start_main@@GLIBC_2.34 (45,261,640,819 samples, 100.00%)</title><rect x="10.0" y="549" width="1180.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="13.03" y="559.5" >__libc_start_main@@GLIBC_2.34</text>
</g>
<g >
<title>__count_memcg_events (21,872,578 samples, 0.05%)</title><rect x="310.1" y="325" width="0.5" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="313.07" y="335.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (9,525,504 samples, 0.02%)</title><rect x="293.0" y="53" width="0.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="296.03" y="63.5" ></text>
</g>
<g >
<title>read (1,024,365,166 samples, 2.26%)</title><rect x="271.9" y="453" width="26.7" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="274.90" y="463.5" >r..</text>
</g>
<g >
<title>lock_vma_under_rcu (44,612,581 samples, 0.10%)</title><rect x="322.6" y="421" width="1.2" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="325.63" y="431.5" ></text>
</g>
<g >
<title>rmqueue (33,145,945 samples, 0.07%)</title><rect x="315.5" y="277" width="0.9" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="318.50" y="287.5" ></text>
</g>
<g >
<title>do_vmi_munmap (313,932,627 samples, 0.69%)</title><rect x="10.1" y="389" width="8.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="13.10" y="399.5" ></text>
</g>
<g >
<title>update_process_times (7,822,045 samples, 0.02%)</title><rect x="324.7" y="357" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="327.67" y="367.5" ></text>
</g>
<g >
<title>testRequests (33,145,485,708 samples, 73.23%)</title><rect x="325.9" y="485" width="864.1" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="328.89" y="495.5" >testRequests</text>
</g>
<g >
<title>tick_sched_do_timer (8,441,156 samples, 0.02%)</title><rect x="1185.5" y="357" width="0.2" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="1188.46" y="367.5" ></text>
</g>
<g >
<title>__libc_start_call_main (45,261,640,819 samples, 100.00%)</title><rect x="10.0" y="533" width="1180.0" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="13.03" y="543.5" >__libc_start_call_main</text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (158,769,073 samples, 0.35%)</title><rect x="853.8" y="421" width="4.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="856.80" y="431.5" ></text>
</g>
<g >
<title>scheduler_tick (88,758,662 samples, 0.20%)</title><rect x="855.1" y="325" width="2.4" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="858.14" y="335.5" ></text>
</g>
<g >
<title>__strcmp_evex (144,495,079 samples, 0.32%)</title><rect x="18.3" y="485" width="3.8" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="21.29" y="495.5" ></text>
</g>
<g >
<title>do_anonymous_page (422,020,779 samples, 0.93%)</title><rect x="283.7" y="165" width="11.0" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="286.66" y="175.5" ></text>
</g>
<g >
<title>do_user_addr_fault (836,634,416 samples, 1.85%)</title><rect x="302.1" y="437" width="21.8" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="305.08" y="447.5" >d..</text>
</g>
<g >
<title>_start (45,261,640,819 samples, 100.00%)</title><rect x="10.0" y="565" width="1180.0" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="13.03" y="575.5" >_start</text>
</g>
<g >
<title>perf_ibs_start (6,736,797 samples, 0.01%)</title><rect x="855.5" y="277" width="0.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="858.50" y="287.5" ></text>
</g>
<g >
<title>__alloc_pages (126,995,137 samples, 0.28%)</title><rect x="313.1" y="309" width="3.3" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="316.10" y="319.5" ></text>
</g>
<g >
<title>hashTableFind (10,312,992,148 samples, 22.78%)</title><rect x="918.6" y="469" width="268.9" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="921.61" y="479.5" >hashTableFind</text>
</g>
<g >
<title>__lruvec_stat_mod_folio (20,836,874 samples, 0.05%)</title><rect x="293.7" y="133" width="0.5" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="296.66" y="143.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (89,995,162 samples, 0.20%)</title><rect x="1185.0" y="453" width="2.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1188.02" y="463.5" ></text>
</g>
<g >
<title>_raw_spin_lock (11,815,141 samples, 0.03%)</title><rect x="312.2" y="357" width="0.3" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="315.18" y="367.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (5,825,559 samples, 0.01%)</title><rect x="320.1" y="325" width="0.1" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="323.07" y="335.5" ></text>
</g>
<g >
<title>mt_find (18,225,983 samples, 0.04%)</title><rect x="295.9" y="181" width="0.5" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="298.94" y="191.5" ></text>
</g>
<g >
<title>update_process_times (99,612,064 samples, 0.22%)</title><rect x="854.9" y="341" width="2.6" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="857.87" y="351.5" ></text>
</g>
<g >
<title>__lruvec_stat_mod_folio (34,648,375 samples, 0.08%)</title><rect x="12.3" y="245" width="0.9" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="15.30" y="255.5" ></text>
</g>
<g >
<title>exc_page_fault (889,267,924 samples, 1.96%)</title><rect x="301.2" y="453" width="23.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="304.19" y="463.5" >e..</text>
</g>
<g >
<title>count_memcg_events.constprop.0 (17,373,301 samples, 0.04%)</title><rect x="321.8" y="405" width="0.5" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="324.81" y="415.5" ></text>
</g>
<g >
<title>hashMap.exe (45,263,813,805 samples, 100.00%)</title><rect x="10.0" y="581" width="1180.0" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="13.00" y="591.5" >hashMap.exe</text>
</g>
<g >
<title>folio_add_lru_vma (90,243,208 samples, 0.20%)</title><rect x="317.0" y="357" width="2.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="319.99" y="367.5" ></text>
</g>
<g >
<title>perf_event_task_tick (18,656,411 samples, 0.04%)</title><rect x="855.3" y="309" width="0.5" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="858.33" y="319.5" ></text>
</g>
<g >
<title>nohz_balancer_kick (4,158,130 samples, 0.01%)</title><rect x="186.8" y="309" width="0.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="189.80" y="319.5" ></text>
</g>
<g >
<title>cgroup_rstat_updated (6,598,228 samples, 0.01%)</title><rect x="310.5" y="309" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="313.46" y="319.5" ></text>
</g>
<g >
<title>folio_add_lru (90,243,208 samples, 0.20%)</title><rect x="317.0" y="341" width="2.3" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="319.99" y="351.5" ></text>
</g>
<g >
<title>rmqueue_bulk (15,500,354 samples, 0.03%)</title><rect x="291.1" y="37" width="0.4" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="294.14" y="47.5" ></text>
</g>
<g >
<title>_copy_to_iter (918,977,008 samples, 2.03%)</title><rect x="272.7" y="277" width="24.0" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="275.73" y="287.5" >_..</text>
</g>
<g >
<title>hashTableFind (83,902,843 samples, 0.19%)</title><rect x="24.8" y="485" width="2.1" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="27.76" y="495.5" ></text>
</g>
<g >
<title>update_process_times (50,217,214 samples, 0.11%)</title><rect x="1185.7" y="341" width="1.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1188.73" y="351.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (8,986,054 samples, 0.02%)</title><rect x="324.6" y="405" width="0.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="327.64" y="415.5" ></text>
</g>
<g >
<title>blk_cgroup_congested (6,400,485 samples, 0.01%)</title><rect x="284.7" y="133" width="0.1" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="287.65" y="143.5" ></text>
</g>
<g >
<title>scheduler_tick (6,204,973 samples, 0.01%)</title><rect x="324.7" y="341" width="0.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="327.71" y="351.5" ></text>
</g>
<g >
<title>update_cfs_group (4,547,242 samples, 0.01%)</title><rect x="857.3" y="309" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="860.29" y="319.5" ></text>
</g>
<g >
<title>irq_exit_rcu (4,424,557 samples, 0.01%)</title><rect x="858.0" y="421" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="860.95" y="431.5" ></text>
</g>
<g >
<title>__munmap (313,932,627 samples, 0.69%)</title><rect x="10.1" y="485" width="8.2" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="13.10" y="495.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (313,932,627 samples, 0.69%)</title><rect x="10.1" y="421" width="8.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="13.10" y="431.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (85,708,275 samples, 0.19%)</title><rect x="1185.1" y="437" width="2.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1188.14" y="447.5" ></text>
</g>
<g >
<title>pte_offset_map_nolock (6,163,254 samples, 0.01%)</title><rect x="294.7" y="165" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="297.72" y="175.5" ></text>
</g>
<g >
<title>clockevents_program_event (4,533,236 samples, 0.01%)</title><rect x="857.8" y="373" width="0.1" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="860.78" y="383.5" ></text>
</g>
<g >
<title>perf_ibs_stop (4,801,479 samples, 0.01%)</title><rect x="855.7" y="277" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="858.67" y="287.5" ></text>
</g>
<g >
<title>policy_nodemask (7,045,411 samples, 0.02%)</title><rect x="316.5" y="309" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="319.53" y="319.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (75,133,411 samples, 0.17%)</title><rect x="1185.2" y="405" width="2.0" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1188.24" y="415.5" ></text>
</g>
<g >
<title>consume_stock (13,920,599 samples, 0.03%)</title><rect x="311.1" y="325" width="0.4" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="314.09" y="335.5" ></text>
</g>
<g >
<title>do_syscall_64 (313,932,627 samples, 0.69%)</title><rect x="10.1" y="453" width="8.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="13.10" y="463.5" ></text>
</g>
<g >
<title>try_charge_memcg (30,337,382 samples, 0.07%)</title><rect x="310.7" y="341" width="0.8" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="313.71" y="351.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64 (7,616,551 samples, 0.02%)</title><rect x="1185.5" y="341" width="0.2" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1188.47" y="351.5" ></text>
</g>
<g >
<title>isspace (6,145,605,411 samples, 13.58%)</title><rect x="26.9" y="485" width="160.3" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="29.95" y="495.5" >isspace</text>
</g>
<g >
<title>copy_page_to_iter (6,534,821 samples, 0.01%)</title><rect x="271.9" y="309" width="0.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="274.91" y="319.5" ></text>
</g>
<g >
<title>copy_page_to_iter (952,345,655 samples, 2.10%)</title><rect x="272.5" y="293" width="24.8" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="275.48" y="303.5" >c..</text>
</g>
<g >
<title>free_unref_page_prepare (6,847,212 samples, 0.02%)</title><rect x="16.6" y="181" width="0.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="19.58" y="191.5" ></text>
</g>
<g >
<title>scheduler_tick (15,814,818 samples, 0.03%)</title><rect x="186.5" y="341" width="0.4" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="189.53" y="351.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (931,456,716 samples, 2.06%)</title><rect x="300.3" y="469" width="24.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="303.26" y="479.5" >a..</text>
</g>
<g >
<title>update_curr (6,686,949 samples, 0.01%)</title><rect x="856.0" y="293" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="858.96" y="303.5" ></text>
</g>
<g >
<title>trigger_load_balance (14,871,415 samples, 0.03%)</title><rect x="1186.6" y="309" width="0.3" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="1189.56" y="319.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (77,485,115 samples, 0.17%)</title><rect x="1185.2" y="421" width="2.0" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1188.18" y="431.5" ></text>
</g>
<g >
<title>all (45,263,826,967 samples, 100%)</title><rect x="10.0" y="597" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="607.5" ></text>
</g>
<g >
<title>strcmp@plt (96,077,053 samples, 0.21%)</title><rect x="1187.5" y="469" width="2.5" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1190.46" y="479.5" ></text>
</g>
<g >
<title>generic_file_read_iter (1,024,063,128 samples, 2.26%)</title><rect x="271.9" y="325" width="26.7" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="274.91" y="335.5" >g..</text>
</g>
<g >
<title>sync_regs (31,019,206 samples, 0.07%)</title><rect x="325.0" y="469" width="0.8" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="327.99" y="479.5" ></text>
</g>
</g>
</svg>
